{"version":3,"sources":["hooks/useLoginSubmit.js","assets/img/login-office.jpeg","assets/img/login-office-dark.jpeg","pages/Login.js"],"names":["useLoginSubmit","loading","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","register","handleSubmit","formState","errors","useForm","onSubmit","_ref","name","email","verifyEmail","password","role","pathname","AdminServices","loginAdmin","then","res","console","log","Cookies","set","JSON","stringify","expires","catch","err","error","notifyError","response","data","message","notifySuccess","type","payload","localStorage","setItem","replace","registerAdmin","forgetPassword","Login","t","useTranslation","useEffect","Email","getItem","from","state","_jsx","_Fragment","children","className","_jsxs","src","ImageLight","alt","ImageDark","LabelArea","label","InputArea","defaultValue","placeholder","Error","errorName","Button","disabled","to","ImFacebook","ImGoogle","Link"],"mappings":"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","file":"static/js/7.d13a2bb0.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\nimport { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { AdminContext } from 'context/AdminContext';\nimport AdminServices from 'services/AdminServices';\nimport { notifyError, notifySuccess } from 'utils/toast';\n\nconst useLoginSubmit = () => {\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useContext(AdminContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\n    setLoading(true);\n    const cookieTimeOut = 0.5;\n\n    if (location.pathname === '/login') {\n      AdminServices.loginAdmin({ email, password })\n        .then((res) => {\n          if (res) {\n            console.log('Login response:', res);\n            Cookies.set('adminInfo', JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n          }\n        })\n        .catch((err) => {\n          console.error('Login error:', err);\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n      setLoading(false);\n      notifySuccess('Login Success!');\n      dispatch({ type: 'USER_LOGIN', payload: { email: email } });\n      localStorage.setItem(\"email\", email)\n      history.replace('/');\n    }\n\n    if (location.pathname === '/signup') {\n      AdminServices.registerAdmin({ name, email, password, role })\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            notifySuccess('Register Success!');\n            dispatch({ type: 'USER_LOGIN', payload: res });\n            Cookies.set('adminInfo', JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n            history.replace('/');\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === '/forgot-password') {\n      AdminServices.forgetPassword({ verifyEmail })\n        .then((res) => {\n          setLoading(false);\n          notifySuccess(res.message);\n        })\n        .catch((err) => {\n          setLoading(false);\n          notifyError(err ? err.response.data.message : err.message);\n        });\n    }\n  };\n  return {\n    onSubmit,\n    register,\n    handleSubmit,\n    errors,\n    loading,\n  };\n};\n\nexport default useLoginSubmit;\n","export default __webpack_public_path__ + \"static/media/login-office.c7786a89.jpeg\";","export default __webpack_public_path__ + \"static/media/login-office-dark.c7786a89.jpeg\";","import React, { useContext, useEffect } from \"react\";\nimport { Button } from \"@windmill/react-ui\";\nimport { useTranslation } from \"react-i18next\";\nimport Error from \"components/form/Error\";\nimport LabelArea from \"components/form/LabelArea\";\nimport InputArea from \"components/form/InputArea\";\nimport ImageLight from \"assets/img/login-office.jpeg\";\nimport ImageDark from \"assets/img/login-office-dark.jpeg\";\nimport useLoginSubmit from \"../hooks/useLoginSubmit\";\nimport { AdminContext } from 'context/AdminContext';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { notifySuccess } from \"utils/toast\";\nimport { Link } from \"@react-pdf/renderer\";\nimport { ImFacebook, ImGoogle } from \"react-icons/im\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n  const { onSubmit, register, handleSubmit, errors, loading } =\n    useLoginSubmit();\n\n  const { dispatch } = useContext(AdminContext);\n  const history = useHistory();\n  const location = useLocation();\n\n\n  // Added By : Govinda \n\n  // Explanation : before it was using synchronous userstatus() function which did not allowed sideffects and rendering properly now using useeffect allows decoupling of codes and allows sideeffects like rendering a differenct route when location.state has the specific route add your Logic accordingly if want changes in future\n\n  useEffect(() => {\n    const Email = localStorage.getItem(\"email\");\n    if (Email) {\n      const { from } = location.state || { from: { pathname: \"/\" } };\n      history.replace(from);\n      notifySuccess('Welcome back!');\n      dispatch({ type: 'USER_LOGIN', payload: { email: Email } });\n    }\n  }, [dispatch, history, location.state]);\n\n  // const handleLogin = async (data) => {\n  //   await onSubmit(data);\n  //   const { from } = location.state || { from: { pathname: \"/\" } };\n  //   history.replace(from);\n  // };\n\n  return (\n    <>\n      <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n          <div className=\"flex flex-col overflow-y-auto md:flex-row\">\n            <div className=\"h-32 md:h-auto md:w-1/2\">\n              <img\n                aria-hidden=\"true\"\n                className=\"object-cover w-full h-full dark:hidden\"\n                src={ImageLight}\n                alt=\"Office\"\n              />\n              <img\n                aria-hidden=\"true\"\n                className=\"hidden object-cover w-full h-full dark:block\"\n                src={ImageDark}\n                alt=\"Office\"\n              />\n            </div>\n            <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n              <div className=\"w-full\">\n                <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\n                  Login\n                </h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <LabelArea label=\"Email\" />\n                  <InputArea\n                    register={register}\n                    defaultValue=\"admin@gmail.com\"\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"john@doe.com\"\n                  />\n                  <Error errorName={errors.email} />\n                  <div className=\"mt-6\"></div>\n                  <LabelArea label=\"Password\" />\n                  <InputArea\n                    register={register}\n                    defaultValue=\"123456789\"\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"***************\"\n                  />\n                  <Error errorName={errors.password} />\n\n                  <Button\n                    disabled={loading}\n                    type=\"submit\"\n                    className=\"mt-4 h-12 w-full\"\n                    to=\"/dashboard\"\n                  >\n                    {t(\"LoginTitle\")}\n                  </Button>\n                  <hr className=\"my-10\" />\n                  <button\n                    disabled\n                    className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2 md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-blue-600 h-11 md:h-12 w-full mr-2\"\n                  >\n                    <ImFacebook className=\"w-4 h-4 mr-2\" />{\" \"}\n                    <span className=\"ml-2\"> {t(\"LoginWithFacebook\")} </span>\n                  </button>\n                  <button\n                    disabled\n                    className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2  md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-red-500 h-11 md:h-12 w-full\"\n                  >\n                    <ImGoogle className=\"w-4 h-4 mr-2\" />{\" \"}\n                    <span className=\"ml-2\">{t(\"LoginWithGoogle\")}</span>\n                  </button>\n                </form>\n\n                <p className=\"mt-4\">\n                  <Link\n                    className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\n                    to=\"/forgot-password\"\n                  >\n                    {t(\"ForgotPassword\")}\n                  </Link>\n                </p>\n                <p className=\"mt-1\">\n                  <Link\n                    className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\n                    to=\"/signup\"\n                  >\n                    {t(\"CreateAccountTitle\")}\n                  </Link>\n                </p>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}