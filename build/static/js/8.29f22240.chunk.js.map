{"version":3,"sources":["hooks/useLoginSubmit.js","assets/img/create-account-office.jpeg","assets/img/create-account-office-dark.jpeg","pages/SignUp.js"],"names":["useLoginSubmit","loading","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","register","handleSubmit","formState","errors","useForm","onSubmit","_ref","name","email","verifyEmail","password","role","pathname","AdminServices","loginAdmin","then","res","console","log","Cookies","set","JSON","stringify","expires","catch","err","error","notifyError","response","data","message","notifySuccess","type","payload","localStorage","setItem","replace","registerAdmin","forgetPassword","SignUp","t","useTranslation","_jsx","className","children","_jsxs","src","ImageLight","alt","ImageDark","LabelArea","label","InputArea","placeholder","Error","errorName","SelectRole","Label","check","Input","Button","disabled","to","block","ImFacebook","ImGoogle","Link"],"mappings":"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","file":"static/js/8.29f22240.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\nimport { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { AdminContext } from 'context/AdminContext';\nimport AdminServices from 'services/AdminServices';\nimport { notifyError, notifySuccess } from 'utils/toast';\n\nconst useLoginSubmit = () => {\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useContext(AdminContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\n    setLoading(true);\n    const cookieTimeOut = 0.5;\n\n    if (location.pathname === '/login') {\n      AdminServices.loginAdmin({ email, password })\n        .then((res) => {\n          if (res) {\n            console.log('Login response:', res);\n            Cookies.set('adminInfo', JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n          }\n        })\n        .catch((err) => {\n          console.error('Login error:', err);\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n      setLoading(false);\n      notifySuccess('Login Success!');\n      dispatch({ type: 'USER_LOGIN', payload: { email: email } });\n      localStorage.setItem(\"email\", email)\n      history.replace('/');\n    }\n\n    if (location.pathname === '/signup') {\n      AdminServices.registerAdmin({ name, email, password, role })\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            notifySuccess('Register Success!');\n            dispatch({ type: 'USER_LOGIN', payload: res });\n            Cookies.set('adminInfo', JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n            history.replace('/');\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === '/forgot-password') {\n      AdminServices.forgetPassword({ verifyEmail })\n        .then((res) => {\n          setLoading(false);\n          notifySuccess(res.message);\n        })\n        .catch((err) => {\n          setLoading(false);\n          notifyError(err ? err.response.data.message : err.message);\n        });\n    }\n  };\n  return {\n    onSubmit,\n    register,\n    handleSubmit,\n    errors,\n    loading,\n  };\n};\n\nexport default useLoginSubmit;\n","export default __webpack_public_path__ + \"static/media/create-account-office.080280cb.jpeg\";","export default __webpack_public_path__ + \"static/media/create-account-office-dark.080280cb.jpeg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input, Label, Button } from \"@windmill/react-ui\";\nimport { ImFacebook, ImGoogle } from \"react-icons/im\";\nimport { useTranslation } from \"react-i18next\";\nimport Error from \"components/form/Error\";\nimport InputArea from \"components/form/InputArea\";\nimport LabelArea from \"components/form/LabelArea\";\nimport SelectRole from \"components/form/SelectRole\";\nimport useLoginSubmit from \"hooks/useLoginSubmit\";\nimport ImageLight from \"assets/img/create-account-office.jpeg\";\nimport ImageDark from \"assets/img/create-account-office-dark.jpeg\";\n\nconst SignUp = () => {\n  const {t}=useTranslation()\n  const { onSubmit, register, handleSubmit, errors, loading } = useLoginSubmit();\n\n  return (\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800\">\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\n          <div className=\"h-32 md:h-auto md:w-1/2\">\n            <img\n              aria-hidden=\"true\"\n              className=\"object-cover w-full h-full dark:hidden\"\n              src={ImageLight}\n              alt=\"Office\"\n            />\n            <img\n              aria-hidden=\"true\"\n              className=\"hidden object-cover w-full h-full dark:block\"\n              src={ImageDark}\n              alt=\"Office\"\n            />\n          </div>\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n            <div className=\"w-full\">\n              <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\n                {t(\"CreateAccount\")}\n              </h1>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <LabelArea label=\"Name\" />\n                <InputArea\n                  register={register}\n                  label=\"Name\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Admin\"\n                />\n                <Error errorName={errors.name} />\n                <LabelArea label=\"Email\" />\n                <InputArea\n                  register={register}\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"john@doe.com\"\n                />\n                <Error errorName={errors.email} />\n\n                <LabelArea label=\"Password\" />\n                <InputArea\n                  register={register}\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"***************\"\n                />\n                <Error errorName={errors.password} />\n\n                <LabelArea label=\"Staff Role\" />\n                <div className=\"col-span-8 sm:col-span-4\">\n                  <SelectRole register={register} label=\"Role\" name=\"role\" />\n                  <Error errorName={errors.role} />\n                </div>\n\n                <Label className=\"mt-6\" check>\n                  <Input type=\"checkbox\" />\n                  <span className=\"ml-2\">\n                    {t(\"Iagree\")} <span className=\"underline\">{t(\"privacyPolicy\")}</span>\n                  </span>\n                </Label>\n\n                <Button\n                  disabled={loading}\n                  type=\"submit\"\n                  className=\"mt-4 h-12 w-full\"\n                  to=\"/dashboard\"\n                  block\n                >\n                  {t(\"CreateAccountTitle\")}\n                </Button>\n              </form>\n\n              <hr className=\"my-10\" />\n\n              <button\n                disabled\n                className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2 md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-blue-600 h-11 md:h-12 w-full mr-2\"\n              >\n                <ImFacebook className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\"> {t(\"LoginWithFacebook\")} </span>\n              </button>\n              <button\n                disabled\n                className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2  md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-red-500 h-11 md:h-12 w-full\"\n              >\n                <ImGoogle className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\">{t(\"LoginWithGoogle\")}</span>\n              </button>\n\n              <p className=\"mt-4\">\n                <Link\n                  className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\n                  to=\"/login\"\n                >\n                 {t(\"AlreadyAccount\")}\n                </Link>\n              </p>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}